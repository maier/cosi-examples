---
- hosts: all
  gather_facts: true
  vars:
    #
    # cosi-server repository URL (only change if testing development version of cosi-server)
    #
    repo_url: "https://github.com/circonus-labs/cosi-server"
    #
    # set to cosi-server tag for release version to install (see <repo_url>/releases)
    # get version checksum from cosi-server_checksums.txt (sha256 signatures) in <repo_url>/releases
    #
    # (see https://github.com/circonus-labs/cosi-server/releases/latest)
    version_tag: v0.5.6
    version_checksum: sha256:f60ba8343b1fc010292f4c722e72cad6e06fe3903faac33127bd659db829315e
    #
    # derived name of tgz to download and install
    #
    install_file: "cosi-server_{{ version_tag|replace('v','') }}_{{ ansible_system|lower }}_x86_64.tar.gz"
    #
    # for example, if version_tag were 0.1.0, the full download URL would be:
    # https://github.com/circonus-labs/cosi-server/releases/download/v0.1.0/cosi-server_0.1.0_linux_x86_64.tar.gz
    #
    download_url: "{{ repo_url }}/releases/download/{{ version_tag }}/{{ install_file }}"
    #
    # set to true to serve agent packages from local cosi-sever (e.g. during dev testing)
    # put the test packages to serve in roles/server/files/packages directory
    # and ensure roles/server/templates/circonus-packages.yaml.j2 reflects the test package names
    #
    local_agent_packages: true
    #
    # version of agent to serve
    #
    # see https://github.com/circonus-labs/circonus-agent/releases/latest
    agent_version: v0.19.5
    #
    # cosi tool settings - the file to redirect the install request to will be
    # dynamically generated based on query arguments sent by the installer (system
    # os type (e.g. linux, freebsd, solaris, etc.), system architecture, etc.)
    #
    # see https://github.com/circonus-labs/cosi-tool/releases/latest
    cosi_tool_version: v0.6.0
    cosi_tool_base_url: "https://github.com/circonus-labs/cosi-tool/releases/download"
    #
    # prod defaults, override in a local extra vars file
    slack_token: ""
    slack_success_channel: "" # default, use the channel associated with the token
    slack_failure_channel: "{{ slack_success_channel }}"
    # the public address used in URLs
    cosi_server_addr: setup.circonus.com
    # what port the server should listen on
    cosi_server_port: 8088
    # add an IP address before the colon to listen
    # on a specific network interface
    cosi_listen: ":{{ cosi_server_port }}"
    # only applicable when serving packages from the cosi-server,
    # if local_agent_packages is true in cosi-server.yaml
    local_agent_packages_url: "https://{{ cosi_server_addr }}"
  tasks:
      - block:
          - include_role:
              name: os
          - include_role:
              name: server
          - name: deployment notification
            slack:
              token: "{{ slack_token }}"
              color: good
              channel: "{{ slack_success_channel }}"
              attachments:
                - title: Success
                  text: "Deployed Circonus One Step Install on {{ inventory_hostname }}"
                  fields:
                      - title: cosi-server
                        value: "<https://github.com/circonus-labs/cosi-server/releases/tag/{{ version_tag }}|{{ version_tag }}>"
                        short: true
                      - title: cosi-tool
                        value: "<https://github.com/circonus-labs/cosi-tool/releases/tag/{{ cosi_tool_version }}|{{ cosi_tool_version }}>"
                        short: true
                      - title: circonus-agent
                        value: "<https://github.com/circonus-labs/circonus-agent/releases/tag/{{ agent_version }}|{{ agent_version }}>"
                        short: true
            when: slack_token != ""
        rescue:
            - name: failure notification
              slack:
                token: "{{ slack_token }}"
                color: danger
                channel: "{{ slack_failure_channel }}"
                attachments:
                    - title: Failed
                      text: "Deployment of Circonus One Step Install on {{ inventory_hostname }}"
                      fields:
                          - title: task
                            value: "{{ ansible_failed_task.name }}"
                          - title: action
                            value: "{{ ansible_failed_task.action }}"
                          - title: result
                            value: "```\n{{ ansible_failed_result.msg }}\n```"
              when: slack_token != ""
